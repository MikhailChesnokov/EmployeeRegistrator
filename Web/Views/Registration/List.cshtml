@using Domain.Infrastructure.Extensions
@model RegistrationsViewModel

@{ ViewBag.Title = "Список регистраций"; }

<h4>Список регистраций</h4>


@if (Model.IsDocument)
{
    <h5>Дата: @DateTime.Now.ToLongDateString()</h5>
    
    <partial name="ReportFilterPartialVIew" model="@Model.FilterForm"/>
}
else
{
    <partial name="ReportFilterPartial" model="@Model.FilterForm" />
}


@if (Model.DayRegistrations?.Any() != true)
{
    <p>Список регистраций пуст</p>
}
else
{
    <table class="table table-bordered table-sm">
        <thead style="display: table-header-group">
            <tr style="page-break-inside: avoid">
                <th>День</th>
                <th>Сотрудник</th>
                <th>Время</th>
                <th>Событие</th>
                <th>Место</th>
                <th>Отработано за период</th>
                <th>Отработано за день</th>
                <th>Опоздание</th>
            </tr>
        </thead>

        <tbody style="display: table-row-group">
        
        @foreach (var dayRegistrations in Model.DayRegistrations)
        {
            foreach (var dayEmployeeRegistrations in dayRegistrations.DayEmployeeRegistraions)
            {
                foreach (var dayEmployeeRegistraionRow in dayEmployeeRegistrations.RegistrationRows)
                {
                    string dayAndEmployee = $"{dayRegistrations.Day.Date}-{dayEmployeeRegistrations.EmployeeId}-";
                    int dayEmployeeRowsCount = dayEmployeeRegistrations.TotalDayEmployeeRegistrationsCount;
                    const string timeSpanFormat = "hh\\:mm";

                    <tr style="page-break-inside: avoid">
                        <td rowspan="@dayRegistrations.TotalDayRegistrationsCount" rowspan-id="@dayRegistrations.Day.Date">@dayRegistrations.Day.ToShortDateString()</td>

                        <td rowspan="@dayEmployeeRowsCount" rowspan-id="@dayAndEmployee-emp">@dayEmployeeRegistrations.Employee</td>

                        <td>@dayEmployeeRegistraionRow.Time.ToString(timeSpanFormat)</td>

                        <td>@dayEmployeeRegistraionRow.Event.DisplayName()</td>
                        
                        <td>@dayEmployeeRegistraionRow.EntranceCompleteName</td>

                        @if (dayEmployeeRegistraionRow.CheckResult is RegistrationCheckResult.Ok && dayEmployeeRegistraionRow.Event is RegistrationEventType.Coming)
                        {
                            <td rowspan="2">@dayEmployeeRegistraionRow.WorkTimeInterval.ToString(timeSpanFormat)</td>
                        }
                        else if (dayEmployeeRegistraionRow.CheckResult is RegistrationCheckResult.Violation)
                        {
                            <td class="table-danger">-</td>
                        }

                        <td rowspan="@dayEmployeeRowsCount" rowspan-id="@dayAndEmployee-work">@dayEmployeeRegistrations.TotalWorkDayTimeInterval.ToString(timeSpanFormat)</td>

                        <td rowspan="@dayEmployeeRowsCount" rowspan-id="@dayAndEmployee-late" class="@(dayEmployeeRegistrations.EmployeeWasLate ? "table-warning" : string.Empty)">@dayEmployeeRegistrations.LatenessTimeInterval.ToString(timeSpanFormat)</td>
                    </tr>
                }
            }
        }
        </tbody>
    </table>
}

@section Scripts
{
    <script type="text/javascript">
        window.$('#EmployeeId').select2();

        $(function () {
            $('#datetimepicker4-DateFrom').datetimepicker({
                format: 'L'
            });

            $('#datetimepicker4-DateTo').datetimepicker({
                format: 'L'
            });
        });
    </script>
}